# Generated by Django 5.2.3 on 2025-09-06 06:47

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommandRunLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('command_name', models.CharField(max_length=100, unique=True)),
                ('last_run', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Distribuidor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('phone_number', models.CharField(max_length=20, unique=True)),
                ('company', models.CharField(blank=True, max_length=100, null=True)),
                ('rfc', models.CharField(blank=True, max_length=15, null=True)),
                ('street', models.CharField(max_length=125)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('zip', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GlobalLimits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_limit', models.IntegerField(default=10)),
                ('mt_limit', models.IntegerField(default=45)),
                ('mo_limit', models.IntegerField(default=30)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.BigIntegerField(unique=True)),
                ('order_type', models.CharField(max_length=50)),
                ('order_date', models.DateTimeField()),
                ('order_status', models.CharField(max_length=50)),
                ('invoice_number', models.CharField(max_length=50)),
                ('invoice_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salutation', models.CharField(blank=True, max_length=10, null=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('company', models.CharField(blank=True, max_length=100, null=True)),
                ('street', models.CharField(max_length=255)),
                ('house_number', models.CharField(blank=True, max_length=20, null=True)),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('zip', models.CharField(max_length=20)),
                ('city', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='SimCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iccid', models.CharField(max_length=50, unique=True)),
                ('imsi', models.CharField(blank=True, max_length=50, null=True)),
                ('msisdn', models.CharField(blank=True, max_length=50, null=True)),
                ('imei', models.CharField(blank=True, max_length=50, null=True)),
                ('imei_lock', models.BooleanField(default=False)),
                ('status', models.CharField(max_length=20)),
                ('activation_date', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('current_quota', models.BigIntegerField(blank=True, null=True)),
                ('quota_status', models.CharField(blank=True, max_length=255, null=True)),
                ('current_quota_SMS', models.BigIntegerField(blank=True, null=True)),
                ('quota_status_SMS', models.CharField(blank=True, max_length=255, null=True)),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField()),
                ('quantity', models.PositiveIntegerField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='SIM_Control.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderSIM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iccid', models.CharField(max_length=30, unique=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sims', to='SIM_Control.order')),
            ],
        ),
        migrations.CreateModel(
            name='Revendedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('phone_number', models.CharField(max_length=20, unique=True)),
                ('company', models.CharField(blank=True, max_length=100, null=True)),
                ('rfc', models.CharField(blank=True, max_length=15, null=True)),
                ('street', models.CharField(max_length=125)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('zip', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=50)),
                ('distribuidor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='revendedores', to='SIM_Control.distribuidor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('phone_number', models.CharField(max_length=20, unique=True)),
                ('company', models.CharField(blank=True, max_length=100, null=True)),
                ('rfc', models.CharField(blank=True, max_length=15, null=True)),
                ('street', models.CharField(max_length=125)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('zip', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=50)),
                ('distribuidor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clientes', to='SIM_Control.distribuidor')),
                ('revendedor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clientes', to='SIM_Control.revendedor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='order',
            name='shipping_address',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SIM_Control.shippingaddress'),
        ),
        migrations.CreateModel(
            name='SIMAssignation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('last_topup_date', models.DateField(blank=True, null=True)),
                ('topup_duration', models.CharField(blank=True, choices=[('1M', '1 mes'), ('3M', '3 meses'), ('6M', '6 meses'), ('1Y', '1 año'), ('2Y', '2 años')], max_length=2, null=True)),
                ('deactivation_date', models.DateField(blank=True, null=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('sim', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='iccid_key', to='SIM_Control.simcard')),
            ],
        ),
        migrations.CreateModel(
            name='MonthlySimUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(max_length=7)),
                ('data_volume', models.FloatField()),
                ('sms_volume', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monthly_usage', to='SIM_Control.simcard')),
            ],
        ),
        migrations.CreateModel(
            name='SIMLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_time', models.DateTimeField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, default=0, null=True)),
                ('longitude', models.FloatField(blank=True, default=0, null=True)),
                ('sim', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location', to='SIM_Control.simcard')),
            ],
        ),
        migrations.CreateModel(
            name='SIMQuota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quota_type', models.CharField(choices=[('DATA', 'Data'), ('SMS', 'SMS')], max_length=10)),
                ('volume', models.FloatField()),
                ('total_volume', models.FloatField()),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('peak_throughput', models.IntegerField()),
                ('last_volume_added', models.FloatField()),
                ('last_status_change_date', models.DateTimeField(blank=True, null=True)),
                ('threshold_percentage', models.IntegerField()),
                ('sim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotas', to='SIM_Control.simcard')),
            ],
        ),
        migrations.CreateModel(
            name='SIMStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=20)),
                ('operator_name', models.CharField(max_length=100)),
                ('country_name', models.CharField(max_length=100)),
                ('rat_type', models.CharField(blank=True, max_length=10, null=True)),
                ('ue_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('sim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sim_status', to='SIM_Control.simcard')),
            ],
        ),
        migrations.CreateModel(
            name='SMSMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submit_date', models.DateTimeField(blank=True, null=True)),
                ('delivery_date', models.DateTimeField(blank=True, null=True)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('retry_count', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('source_address', models.CharField(blank=True, max_length=32, null=True)),
                ('msisdn', models.CharField(blank=True, max_length=32, null=True)),
                ('udh', models.TextField(blank=True, null=True)),
                ('payload', models.TextField(blank=True, null=True)),
                ('status_id', models.PositiveIntegerField(blank=True, null=True)),
                ('status_description', models.CharField(blank=True, max_length=128, null=True)),
                ('sms_type_id', models.PositiveIntegerField(blank=True, null=True)),
                ('sms_type_description', models.CharField(blank=True, max_length=128, null=True)),
                ('source_address_type_id', models.PositiveIntegerField(blank=True, null=True)),
                ('source_address_type_description', models.CharField(blank=True, max_length=128, null=True)),
                ('sim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sms_messages', to='SIM_Control.simcard')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(blank=True, max_length=50, null=True)),
                ('model', models.CharField(blank=True, max_length=50, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
                ('unit_number', models.CharField(blank=True, max_length=50, null=True)),
                ('imei_gps', models.CharField(blank=True, max_length=50, null=True)),
                ('cliente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vehicle', to='SIM_Control.cliente')),
                ('sim', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='SIM_Control.simcard')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('MATRIZ', 'Matriz'), ('DISTRIBUIDOR', 'Distribuidor'), ('REVENDEDOR', 'Revendedor'), ('CLIENTE', 'Cliente')], default='DISTRIBUIDOR', max_length=20)),
                ('preferred_lang', models.CharField(choices=[('es', 'Español'), ('en', 'English'), ('pt', 'Português')], default='es', max_length=5)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserActionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('CREATE', 'Create'), ('UPDATE', 'Update'), ('ENABLE', 'Enable'), ('DISABLE', 'Disable'), ('SEND_SMS', 'Send SMS'), ('DELETE', 'Delete'), ('ASSIGN', 'Assign'), ('REFRESH', 'Refresh'), ('TOPUP', 'Topup'), ('LOGIN', 'Login'), ('LOGOUT', 'Logout')], max_length=20)),
                ('model_name', models.CharField(max_length=100)),
                ('object_id', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('timestamp', models.DateTimeField()),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='revendedor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='distribuidor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cliente',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
